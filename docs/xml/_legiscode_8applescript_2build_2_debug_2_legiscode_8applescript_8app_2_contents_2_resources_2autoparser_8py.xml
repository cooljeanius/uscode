<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.0">
  <compounddef id="_legiscode_8applescript_2build_2_debug_2_legiscode_8applescript_8app_2_contents_2_resources_2autoparser_8py" kind="file">
    <compoundname>autoparser.py</compoundname>
    <innernamespace refid="namespaceautoparser">autoparser</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/python&lt;2.7&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>string,<sp/>os,<sp/>sys</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>splithtml<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>codecs</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re2<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">regfile<sp/>=<sp/>os.path.abspath(os.path.dirname(__file__))+</highlight><highlight class="stringliteral">&apos;/usc-regex.txt&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">divider=</highlight><highlight class="stringliteral">&quot;&lt;!--<sp/>documentid:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">_DEBUG<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>To<sp/>parse<sp/>the<sp/>html<sp/>in<sp/>data/,<sp/>documentid:26_12<sp/>=<sp/>26usc12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">makergxlist(regfile):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>rfile<sp/>=<sp/>codecs.open(regfile,<sp/></highlight><highlight class="stringliteral">&apos;</highlight><highlight class="stringliteral">r&apos;,<sp/>&apos;</highlight><highlight class="normal">utf-8&apos;)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>findreplace<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>eachline<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rfile.readlines():</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>eachline.isspace())<sp/>&amp;<sp/>(eachline[0]<sp/>&lt;&gt;<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_replace<sp/>=<sp/>unicode(eachline).strip().split(</highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>findreplace.append(pattern_replace)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>rfile.close()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>findreplace<sp/>=<sp/>[(re.compile(pattern,<sp/>re.U|re.M),<sp/>replacement)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pattern,<sp/>replacement<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>findreplace]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>findreplace</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">subfile(inputfile,<sp/>findreplace):</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>outtext<sp/>=<sp/>inputfile</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>inputfile<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outtext</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>counter,<sp/>pattern_replace<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(findreplace):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outtext,<sp/>subs<sp/>=<sp/>re.subn(pattern_replace[0],<sp/>pattern_replace[1],<sp/>outtext)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_DEBUG<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>subs<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>pattern_replace[0].pattern</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>pattern_replace[1]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>*<sp/>30</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyboardInterrupt:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>counter,<sp/></highlight><highlight class="stringliteral">&apos;<sp/>substituted:<sp/>&apos;</highlight><highlight class="normal">,<sp/>subs<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>pattern_replace[0],<sp/></highlight><highlight class="stringliteral">&quot;||||&quot;</highlight><highlight class="normal">,<sp/>pattern_replace[1],<sp/>outtext</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outtext<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Dynamically<sp/>replace<sp/>references<sp/>with<sp/>links<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">parsesections(pattern,<sp/>pattern_replace,<sp/>section):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>sectionsref<sp/>=<sp/>re.search(pattern,<sp/>section)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>sectionsref:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>sectionsref.start(1)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>sectionsref.end(2)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;found<sp/>multiple<sp/>secs<sp/>at&quot;,<sp/>i1,<sp/>&quot;-&quot;,<sp/>i2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>section<sp/>=<sp/>section[:i1]+re.sub(pattern_replace[0],<sp/>pattern_replace[1]<sp/>%<sp/>sectionsref.group(2),<sp/>section[i1:i2])<sp/>+<sp/>section[1+i2:]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectionsref<sp/>=<sp/>re.search(pattern,<sp/>section)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>section<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">parsenamedacts(pattern,<sp/>intext):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>namedacts<sp/>=<sp/>re.findall(pattern,<sp/>intext)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>namedacts<sp/>=<sp/>list(set(namedacts))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>outtext<sp/>=<sp/>intext</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>namedact<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>namedacts:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#outtext<sp/>=<sp/><sp/>outtext.replace(namedact+r&apos;@/&apos;,<sp/>encode_act(namedact)+r&apos;@/&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outtext<sp/>=<sp/><sp/>outtext.replace(</highlight><highlight class="stringliteral">r&apos;ref-namedact-&apos;</highlight><highlight class="normal">+namedact,</highlight><highlight class="stringliteral">r&apos;ref-namedact-&apos;</highlight><highlight class="normal">+encode_act(namedact))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outtext</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">encode_act(namedact):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#encoding<sp/>=<sp/>namedact.translate(None,<sp/>string.punctuation)<sp/><sp/>#<sp/>removed<sp/>because<sp/>it<sp/>is<sp/>fails<sp/>with<sp/>unicode<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join([char<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>string.punctuation<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>namedact])<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>encodelen<sp/>=<sp/>str(len(encoding))</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>[char<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>string.lowercase+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>char<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>encoding]<sp/><sp/></highlight><highlight class="comment">#[encoding.translate(None,<sp/>string.lowercase<sp/>+<sp/>r&apos;<sp/>&apos;)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>encoding.append(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>+<sp/>encodelen)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">.join(encoding)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Loop<sp/>through<sp/>sections<sp/>with<sp/>various<sp/>parsing<sp/>passes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">parsers(uscfiles,<sp/>findreplace):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>parsedfiles<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>counter,<sp/>section<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(uscfiles):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;File&quot;,<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>subfile(section,<sp/>findreplace)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>parsedfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Replace<sp/>Multiple<sp/>Section<sp/>references<sp/>with<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/>Include<sp/>[^&lt;]<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>group<sp/>is<sp/>transformed<sp/>twice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/><sp/></highlight><highlight class="stringliteral">r&apos;@@@\s[Ss]ections?\s([^&lt;]*?)@@@@@(.*?)@@&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_replace<sp/>=<sp/>[</highlight><highlight class="stringliteral">r&apos;%s&apos;</highlight><highlight class="normal"><sp/>%<sp/></highlight><highlight class="stringliteral">u&apos;(\d+\w*(?:\(\w+\))*[-|–]?\d*)([,<sp/>@])&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;&lt;a<sp/>href=&quot;/laws/target/%s/\1&quot;<sp/>class=&quot;sec&quot;&gt;\1&lt;/a&gt;\2&apos;</highlight><highlight class="normal">]<sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>parsesections(pattern,<sp/>pattern_replace,<sp/>parsedfile)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#parsedfile<sp/>=<sp/>re.sub(r&apos;@of-ref@&apos;,<sp/>r&apos;ref-Title-&apos;+title,<sp/>parsedfile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;@@ref-.*?@&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;&apos;</highlight><highlight class="normal">,<sp/>parsedfile)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#parsedfile<sp/>=<sp/>re.sub(r&apos;ref-title-this&apos;,<sp/>r&apos;ref-title-&apos;+title,<sp/>parsedfile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Encode<sp/>Named<sp/>Acts<sp/>by<sp/>removing<sp/>lowercase<sp/>and<sp/>non-word<sp/>characters,<sp/>and<sp/>appending<sp/>the<sp/>length<sp/>of<sp/>the<sp/>name<sp/>w/o<sp/>non-word<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#pattern<sp/>=<sp/><sp/>r&apos;@@ref-namedact-(.*?)@@&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern<sp/>=<sp/><sp/></highlight><highlight class="stringliteral">r&apos;/ref-namedact-(.*?)/&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>parsenamedacts(pattern,<sp/>parsedfile)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;@of-ref@&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;ref-title-this&apos;</highlight><highlight class="normal">,<sp/>parsedfile)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>re.sub(</highlight><highlight class="stringliteral">r&apos;@@ref-.*?@&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">r&apos;&apos;</highlight><highlight class="normal">,<sp/>parsedfile)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Remove<sp/>remaining<sp/>@</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfile<sp/>=<sp/>parsedfile.replace(</highlight><highlight class="stringliteral">&apos;@&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight><highlight class="comment">#.translate(None,<sp/>&apos;@&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsedfiles.append(parsedfile)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedfiles<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">parse(data=False):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uscfiles<sp/>=<sp/>[data,<sp/>]</highlight><highlight class="comment">#.split(divider)#splithtml()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>findreplace<sp/>=<sp/>makergxlist(regfile)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>parsedfiles<sp/>=<sp/>parsers(uscfiles,<sp/>findreplace)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parsedfiles</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/ericgallager/uscode/Legiscode.applescript/build/Debug/Legiscode.applescript.app/Contents/Resources/autoparser.py"/>
  </compounddef>
</doxygen>
